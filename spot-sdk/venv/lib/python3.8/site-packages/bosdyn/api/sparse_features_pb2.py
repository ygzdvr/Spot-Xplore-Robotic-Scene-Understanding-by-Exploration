# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bosdyn/api/sparse_features.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from bosdyn.api import geometry_pb2 as bosdyn_dot_api_dot_geometry__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n bosdyn/api/sparse_features.proto\x12\nbosdyn.api\x1a\x19\x62osdyn/api/geometry.proto\"x\n\x08Keypoint\x12%\n\x0b\x63oordinates\x18\x02 \x01(\x0b\x32\x10.bosdyn.api.Vec2\x12\x19\n\x11\x62inary_descriptor\x18\x03 \x01(\x0c\x12\r\n\x05score\x18\x04 \x01(\x02\x12\x0c\n\x04size\x18\x05 \x01(\x02\x12\r\n\x05\x61ngle\x18\x06 \x01(\x02\"\xca\x01\n\x0bKeypointSet\x12\'\n\tkeypoints\x18\x02 \x03(\x0b\x32\x14.bosdyn.api.Keypoint\x12\x32\n\x04type\x18\x03 \x01(\x0e\x32$.bosdyn.api.KeypointSet.KeypointType\"^\n\x0cKeypointType\x12\x14\n\x10KEYPOINT_UNKNOWN\x10\x00\x12\x13\n\x0fKEYPOINT_SIMPLE\x10\x01\x12\x10\n\x0cKEYPOINT_ORB\x10\x02\x12\x11\n\rKEYPOINT_DISK\x10\x03\"F\n\x05Match\x12\x17\n\x0freference_index\x18\x02 \x01(\x05\x12\x12\n\nlive_index\x18\x03 \x01(\x05\x12\x10\n\x08\x64istance\x18\x04 \x01(\x02\"\x95\x02\n\x0fKeypointMatches\x12\x34\n\x13reference_keypoints\x18\x02 \x01(\x0b\x32\x17.bosdyn.api.KeypointSet\x12/\n\x0elive_keypoints\x18\x03 \x01(\x0b\x32\x17.bosdyn.api.KeypointSet\x12\"\n\x07matches\x18\x04 \x03(\x0b\x32\x11.bosdyn.api.Match\x12\x33\n\x04type\x18\x05 \x01(\x0e\x32%.bosdyn.api.KeypointMatches.MatchType\"B\n\tMatchType\x12\x11\n\rMATCH_UNKNOWN\x10\x00\x12\r\n\tMATCH_ORB\x10\x01\x12\x13\n\x0fMATCH_LIGHTGLUE\x10\x02\x42\x15\x42\x13SparseFeaturesProtob\x06proto3')



_KEYPOINT = DESCRIPTOR.message_types_by_name['Keypoint']
_KEYPOINTSET = DESCRIPTOR.message_types_by_name['KeypointSet']
_MATCH = DESCRIPTOR.message_types_by_name['Match']
_KEYPOINTMATCHES = DESCRIPTOR.message_types_by_name['KeypointMatches']
_KEYPOINTSET_KEYPOINTTYPE = _KEYPOINTSET.enum_types_by_name['KeypointType']
_KEYPOINTMATCHES_MATCHTYPE = _KEYPOINTMATCHES.enum_types_by_name['MatchType']
Keypoint = _reflection.GeneratedProtocolMessageType('Keypoint', (_message.Message,), {
  'DESCRIPTOR' : _KEYPOINT,
  '__module__' : 'bosdyn.api.sparse_features_pb2'
  # @@protoc_insertion_point(class_scope:bosdyn.api.Keypoint)
  })
_sym_db.RegisterMessage(Keypoint)

KeypointSet = _reflection.GeneratedProtocolMessageType('KeypointSet', (_message.Message,), {
  'DESCRIPTOR' : _KEYPOINTSET,
  '__module__' : 'bosdyn.api.sparse_features_pb2'
  # @@protoc_insertion_point(class_scope:bosdyn.api.KeypointSet)
  })
_sym_db.RegisterMessage(KeypointSet)

Match = _reflection.GeneratedProtocolMessageType('Match', (_message.Message,), {
  'DESCRIPTOR' : _MATCH,
  '__module__' : 'bosdyn.api.sparse_features_pb2'
  # @@protoc_insertion_point(class_scope:bosdyn.api.Match)
  })
_sym_db.RegisterMessage(Match)

KeypointMatches = _reflection.GeneratedProtocolMessageType('KeypointMatches', (_message.Message,), {
  'DESCRIPTOR' : _KEYPOINTMATCHES,
  '__module__' : 'bosdyn.api.sparse_features_pb2'
  # @@protoc_insertion_point(class_scope:bosdyn.api.KeypointMatches)
  })
_sym_db.RegisterMessage(KeypointMatches)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'B\023SparseFeaturesProto'
  _KEYPOINT._serialized_start=75
  _KEYPOINT._serialized_end=195
  _KEYPOINTSET._serialized_start=198
  _KEYPOINTSET._serialized_end=400
  _KEYPOINTSET_KEYPOINTTYPE._serialized_start=306
  _KEYPOINTSET_KEYPOINTTYPE._serialized_end=400
  _MATCH._serialized_start=402
  _MATCH._serialized_end=472
  _KEYPOINTMATCHES._serialized_start=475
  _KEYPOINTMATCHES._serialized_end=752
  _KEYPOINTMATCHES_MATCHTYPE._serialized_start=686
  _KEYPOINTMATCHES_MATCHTYPE._serialized_end=752
# @@protoc_insertion_point(module_scope)
