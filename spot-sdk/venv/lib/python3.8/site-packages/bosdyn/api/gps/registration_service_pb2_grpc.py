# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from bosdyn.api.gps import registration_pb2 as bosdyn_dot_api_dot_gps_dot_registration__pb2


class RegistrationServiceStub(object):
    """
    The RegistrationService consumes data sent to the Gps/AggregatorService.
    It calculates where the robot is in the world, and the transforms from
    the robots internal frames to the world frame.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetLocation = channel.unary_unary(
                '/bosdyn.api.gps.RegistrationService/GetLocation',
                request_serializer=bosdyn_dot_api_dot_gps_dot_registration__pb2.GetLocationRequest.SerializeToString,
                response_deserializer=bosdyn_dot_api_dot_gps_dot_registration__pb2.GetLocationResponse.FromString,
                )
        self.ResetRegistration = channel.unary_unary(
                '/bosdyn.api.gps.RegistrationService/ResetRegistration',
                request_serializer=bosdyn_dot_api_dot_gps_dot_registration__pb2.ResetRegistrationRequest.SerializeToString,
                response_deserializer=bosdyn_dot_api_dot_gps_dot_registration__pb2.ResetRegistrationResponse.FromString,
                )


class RegistrationServiceServicer(object):
    """
    The RegistrationService consumes data sent to the Gps/AggregatorService.
    It calculates where the robot is in the world, and the transforms from
    the robots internal frames to the world frame.
    """

    def GetLocation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetRegistration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RegistrationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLocation,
                    request_deserializer=bosdyn_dot_api_dot_gps_dot_registration__pb2.GetLocationRequest.FromString,
                    response_serializer=bosdyn_dot_api_dot_gps_dot_registration__pb2.GetLocationResponse.SerializeToString,
            ),
            'ResetRegistration': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetRegistration,
                    request_deserializer=bosdyn_dot_api_dot_gps_dot_registration__pb2.ResetRegistrationRequest.FromString,
                    response_serializer=bosdyn_dot_api_dot_gps_dot_registration__pb2.ResetRegistrationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bosdyn.api.gps.RegistrationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RegistrationService(object):
    """
    The RegistrationService consumes data sent to the Gps/AggregatorService.
    It calculates where the robot is in the world, and the transforms from
    the robots internal frames to the world frame.
    """

    @staticmethod
    def GetLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bosdyn.api.gps.RegistrationService/GetLocation',
            bosdyn_dot_api_dot_gps_dot_registration__pb2.GetLocationRequest.SerializeToString,
            bosdyn_dot_api_dot_gps_dot_registration__pb2.GetLocationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetRegistration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bosdyn.api.gps.RegistrationService/ResetRegistration',
            bosdyn_dot_api_dot_gps_dot_registration__pb2.ResetRegistrationRequest.SerializeToString,
            bosdyn_dot_api_dot_gps_dot_registration__pb2.ResetRegistrationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
