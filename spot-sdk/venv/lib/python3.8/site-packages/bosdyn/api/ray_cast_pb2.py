# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bosdyn/api/ray_cast.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from bosdyn.api import header_pb2 as bosdyn_dot_api_dot_header__pb2
from bosdyn.api import geometry_pb2 as bosdyn_dot_api_dot_geometry__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19\x62osdyn/api/ray_cast.proto\x12\nbosdyn.api\x1a\x17\x62osdyn/api/header.proto\x1a\x19\x62osdyn/api/geometry.proto\"\xd2\x01\n\x0eRaycastRequest\x12)\n\x06header\x18\x01 \x01(\x0b\x32\x19.bosdyn.api.RequestHeader\x12\x16\n\x0eray_frame_name\x18\x05 \x01(\t\x12\x1c\n\x03ray\x18\x02 \x01(\x0b\x32\x0f.bosdyn.api.Ray\x12!\n\x19min_intersection_distance\x18\x04 \x01(\x02\x12<\n\x12intersection_types\x18\x07 \x03(\x0e\x32 .bosdyn.api.RayIntersection.Type\"\xff\x01\n\x0fRayIntersection\x12.\n\x04type\x18\x01 \x01(\x0e\x32 .bosdyn.api.RayIntersection.Type\x12\x33\n\x19hit_position_in_hit_frame\x18\x02 \x01(\x0b\x32\x10.bosdyn.api.Vec3\x12\x17\n\x0f\x64istance_meters\x18\x03 \x01(\x01\"n\n\x04Type\x12\x10\n\x0cTYPE_UNKNOWN\x10\x00\x12\x15\n\x11TYPE_GROUND_PLANE\x10\x01\x12\x14\n\x10TYPE_TERRAIN_MAP\x10\x02\x12\x12\n\x0eTYPE_VOXEL_MAP\x10\x03\x12\x13\n\x0fTYPE_HAND_DEPTH\x10\x04\"\x8b\x03\n\x0fRaycastResponse\x12*\n\x06header\x18\x01 \x01(\x0b\x32\x1a.bosdyn.api.ResponseHeader\x12\x32\n\x06status\x18\x05 \x01(\x0e\x32\".bosdyn.api.RaycastResponse.Status\x12\x0f\n\x07message\x18\x06 \x01(\t\x12\x16\n\x0ehit_frame_name\x18\x03 \x01(\t\x12)\n\x04hits\x18\x02 \x03(\x0b\x32\x1b.bosdyn.api.RayIntersection\x12:\n\x13transforms_snapshot\x18\x04 \x01(\x0b\x32\x1d.bosdyn.api.FrameTreeSnapshot\"\x87\x01\n\x06Status\x12\x12\n\x0eSTATUS_UNKNOWN\x10\x00\x12\r\n\tSTATUS_OK\x10\x01\x12\x1a\n\x16STATUS_INVALID_REQUEST\x10\x02\x12$\n STATUS_INVALID_INTERSECTION_TYPE\x10\x03\x12\x18\n\x14STATUS_UNKNOWN_FRAME\x10\x04\x42\x0e\x42\x0cRayCastProtob\x06proto3')



_RAYCASTREQUEST = DESCRIPTOR.message_types_by_name['RaycastRequest']
_RAYINTERSECTION = DESCRIPTOR.message_types_by_name['RayIntersection']
_RAYCASTRESPONSE = DESCRIPTOR.message_types_by_name['RaycastResponse']
_RAYINTERSECTION_TYPE = _RAYINTERSECTION.enum_types_by_name['Type']
_RAYCASTRESPONSE_STATUS = _RAYCASTRESPONSE.enum_types_by_name['Status']
RaycastRequest = _reflection.GeneratedProtocolMessageType('RaycastRequest', (_message.Message,), {
  'DESCRIPTOR' : _RAYCASTREQUEST,
  '__module__' : 'bosdyn.api.ray_cast_pb2'
  # @@protoc_insertion_point(class_scope:bosdyn.api.RaycastRequest)
  })
_sym_db.RegisterMessage(RaycastRequest)

RayIntersection = _reflection.GeneratedProtocolMessageType('RayIntersection', (_message.Message,), {
  'DESCRIPTOR' : _RAYINTERSECTION,
  '__module__' : 'bosdyn.api.ray_cast_pb2'
  # @@protoc_insertion_point(class_scope:bosdyn.api.RayIntersection)
  })
_sym_db.RegisterMessage(RayIntersection)

RaycastResponse = _reflection.GeneratedProtocolMessageType('RaycastResponse', (_message.Message,), {
  'DESCRIPTOR' : _RAYCASTRESPONSE,
  '__module__' : 'bosdyn.api.ray_cast_pb2'
  # @@protoc_insertion_point(class_scope:bosdyn.api.RaycastResponse)
  })
_sym_db.RegisterMessage(RaycastResponse)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'B\014RayCastProto'
  _RAYCASTREQUEST._serialized_start=94
  _RAYCASTREQUEST._serialized_end=304
  _RAYINTERSECTION._serialized_start=307
  _RAYINTERSECTION._serialized_end=562
  _RAYINTERSECTION_TYPE._serialized_start=452
  _RAYINTERSECTION_TYPE._serialized_end=562
  _RAYCASTRESPONSE._serialized_start=565
  _RAYCASTRESPONSE._serialized_end=960
  _RAYCASTRESPONSE_STATUS._serialized_start=825
  _RAYCASTRESPONSE_STATUS._serialized_end=960
# @@protoc_insertion_point(module_scope)
