# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from bosdyn.api import ray_cast_pb2 as bosdyn_dot_api_dot_ray__cast__pb2


class RayCastServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Raycast = channel.unary_unary(
                '/bosdyn.api.RayCastService/Raycast',
                request_serializer=bosdyn_dot_api_dot_ray__cast__pb2.RaycastRequest.SerializeToString,
                response_deserializer=bosdyn_dot_api_dot_ray__cast__pb2.RaycastResponse.FromString,
                )


class RayCastServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Raycast(self, request, context):
        """Asks robot to cast the desired ray against its map of the
        surrounding environment to find the nearest intersection point.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RayCastServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Raycast': grpc.unary_unary_rpc_method_handler(
                    servicer.Raycast,
                    request_deserializer=bosdyn_dot_api_dot_ray__cast__pb2.RaycastRequest.FromString,
                    response_serializer=bosdyn_dot_api_dot_ray__cast__pb2.RaycastResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bosdyn.api.RayCastService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RayCastService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Raycast(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bosdyn.api.RayCastService/Raycast',
            bosdyn_dot_api_dot_ray__cast__pb2.RaycastRequest.SerializeToString,
            bosdyn_dot_api_dot_ray__cast__pb2.RaycastResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
