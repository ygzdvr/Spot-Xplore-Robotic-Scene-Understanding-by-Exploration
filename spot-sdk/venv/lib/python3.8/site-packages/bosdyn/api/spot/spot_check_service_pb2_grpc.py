# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from bosdyn.api.spot import spot_check_pb2 as bosdyn_dot_api_dot_spot_dot_spot__check__pb2


class SpotCheckServiceStub(object):
    """RPCs for monitoring robot health and recalibration various sensors. These procedures should be
    run periodically in order to keep the system running in the best possible condition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SpotCheckCommand = channel.unary_unary(
                '/bosdyn.api.spot.SpotCheckService/SpotCheckCommand',
                request_serializer=bosdyn_dot_api_dot_spot_dot_spot__check__pb2.SpotCheckCommandRequest.SerializeToString,
                response_deserializer=bosdyn_dot_api_dot_spot_dot_spot__check__pb2.SpotCheckCommandResponse.FromString,
                )
        self.SpotCheckFeedback = channel.unary_unary(
                '/bosdyn.api.spot.SpotCheckService/SpotCheckFeedback',
                request_serializer=bosdyn_dot_api_dot_spot_dot_spot__check__pb2.SpotCheckFeedbackRequest.SerializeToString,
                response_deserializer=bosdyn_dot_api_dot_spot_dot_spot__check__pb2.SpotCheckFeedbackResponse.FromString,
                )
        self.CameraCalibrationCommand = channel.unary_unary(
                '/bosdyn.api.spot.SpotCheckService/CameraCalibrationCommand',
                request_serializer=bosdyn_dot_api_dot_spot_dot_spot__check__pb2.CameraCalibrationCommandRequest.SerializeToString,
                response_deserializer=bosdyn_dot_api_dot_spot_dot_spot__check__pb2.CameraCalibrationCommandResponse.FromString,
                )
        self.CameraCalibrationFeedback = channel.unary_unary(
                '/bosdyn.api.spot.SpotCheckService/CameraCalibrationFeedback',
                request_serializer=bosdyn_dot_api_dot_spot_dot_spot__check__pb2.CameraCalibrationFeedbackRequest.SerializeToString,
                response_deserializer=bosdyn_dot_api_dot_spot_dot_spot__check__pb2.CameraCalibrationFeedbackResponse.FromString,
                )


class SpotCheckServiceServicer(object):
    """RPCs for monitoring robot health and recalibration various sensors. These procedures should be
    run periodically in order to keep the system running in the best possible condition.
    """

    def SpotCheckCommand(self, request, context):
        """Send a command to the SpotCheck service. The spotcheck service is responsible to both
        recalibrating actuation sensors and checking camera health.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpotCheckFeedback(self, request, context):
        """Check the status of the spot check procedure. After procedure completes, this reports back
        results for specific joints and cameras.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CameraCalibrationCommand(self, request, context):
        """Send a camera calibration command to the robot. Used to start or abort a calibration routine.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CameraCalibrationFeedback(self, request, context):
        """Check the status of the camera calibration procedure.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SpotCheckServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SpotCheckCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.SpotCheckCommand,
                    request_deserializer=bosdyn_dot_api_dot_spot_dot_spot__check__pb2.SpotCheckCommandRequest.FromString,
                    response_serializer=bosdyn_dot_api_dot_spot_dot_spot__check__pb2.SpotCheckCommandResponse.SerializeToString,
            ),
            'SpotCheckFeedback': grpc.unary_unary_rpc_method_handler(
                    servicer.SpotCheckFeedback,
                    request_deserializer=bosdyn_dot_api_dot_spot_dot_spot__check__pb2.SpotCheckFeedbackRequest.FromString,
                    response_serializer=bosdyn_dot_api_dot_spot_dot_spot__check__pb2.SpotCheckFeedbackResponse.SerializeToString,
            ),
            'CameraCalibrationCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.CameraCalibrationCommand,
                    request_deserializer=bosdyn_dot_api_dot_spot_dot_spot__check__pb2.CameraCalibrationCommandRequest.FromString,
                    response_serializer=bosdyn_dot_api_dot_spot_dot_spot__check__pb2.CameraCalibrationCommandResponse.SerializeToString,
            ),
            'CameraCalibrationFeedback': grpc.unary_unary_rpc_method_handler(
                    servicer.CameraCalibrationFeedback,
                    request_deserializer=bosdyn_dot_api_dot_spot_dot_spot__check__pb2.CameraCalibrationFeedbackRequest.FromString,
                    response_serializer=bosdyn_dot_api_dot_spot_dot_spot__check__pb2.CameraCalibrationFeedbackResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bosdyn.api.spot.SpotCheckService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SpotCheckService(object):
    """RPCs for monitoring robot health and recalibration various sensors. These procedures should be
    run periodically in order to keep the system running in the best possible condition.
    """

    @staticmethod
    def SpotCheckCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bosdyn.api.spot.SpotCheckService/SpotCheckCommand',
            bosdyn_dot_api_dot_spot_dot_spot__check__pb2.SpotCheckCommandRequest.SerializeToString,
            bosdyn_dot_api_dot_spot_dot_spot__check__pb2.SpotCheckCommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SpotCheckFeedback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bosdyn.api.spot.SpotCheckService/SpotCheckFeedback',
            bosdyn_dot_api_dot_spot_dot_spot__check__pb2.SpotCheckFeedbackRequest.SerializeToString,
            bosdyn_dot_api_dot_spot_dot_spot__check__pb2.SpotCheckFeedbackResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CameraCalibrationCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bosdyn.api.spot.SpotCheckService/CameraCalibrationCommand',
            bosdyn_dot_api_dot_spot_dot_spot__check__pb2.CameraCalibrationCommandRequest.SerializeToString,
            bosdyn_dot_api_dot_spot_dot_spot__check__pb2.CameraCalibrationCommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CameraCalibrationFeedback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bosdyn.api.spot.SpotCheckService/CameraCalibrationFeedback',
            bosdyn_dot_api_dot_spot_dot_spot__check__pb2.CameraCalibrationFeedbackRequest.SerializeToString,
            bosdyn_dot_api_dot_spot_dot_spot__check__pb2.CameraCalibrationFeedbackResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
