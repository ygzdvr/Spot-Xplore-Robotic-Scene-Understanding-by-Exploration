# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from bosdyn.api import power_pb2 as bosdyn_dot_api_dot_power__pb2


class PowerServiceStub(object):
    """The power service for the robot that can power on/off the robot's motors.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PowerCommand = channel.unary_unary(
                '/bosdyn.api.PowerService/PowerCommand',
                request_serializer=bosdyn_dot_api_dot_power__pb2.PowerCommandRequest.SerializeToString,
                response_deserializer=bosdyn_dot_api_dot_power__pb2.PowerCommandResponse.FromString,
                )
        self.PowerCommandFeedback = channel.unary_unary(
                '/bosdyn.api.PowerService/PowerCommandFeedback',
                request_serializer=bosdyn_dot_api_dot_power__pb2.PowerCommandFeedbackRequest.SerializeToString,
                response_deserializer=bosdyn_dot_api_dot_power__pb2.PowerCommandFeedbackResponse.FromString,
                )
        self.FanPowerCommand = channel.unary_unary(
                '/bosdyn.api.PowerService/FanPowerCommand',
                request_serializer=bosdyn_dot_api_dot_power__pb2.FanPowerCommandRequest.SerializeToString,
                response_deserializer=bosdyn_dot_api_dot_power__pb2.FanPowerCommandResponse.FromString,
                )
        self.FanPowerCommandFeedback = channel.unary_unary(
                '/bosdyn.api.PowerService/FanPowerCommandFeedback',
                request_serializer=bosdyn_dot_api_dot_power__pb2.FanPowerCommandFeedbackRequest.SerializeToString,
                response_deserializer=bosdyn_dot_api_dot_power__pb2.FanPowerCommandFeedbackResponse.FromString,
                )
        self.ResetSafetyStop = channel.unary_unary(
                '/bosdyn.api.PowerService/ResetSafetyStop',
                request_serializer=bosdyn_dot_api_dot_power__pb2.ResetSafetyStopRequest.SerializeToString,
                response_deserializer=bosdyn_dot_api_dot_power__pb2.ResetSafetyStopResponse.FromString,
                )


class PowerServiceServicer(object):
    """The power service for the robot that can power on/off the robot's motors.
    """

    def PowerCommand(self, request, context):
        """Starts a power command on the robot. A robot can only accept one power command at once.
        Power commands, are not interruptible. Once a command is issued, it must complete before
        another command can be issued.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PowerCommandFeedback(self, request, context):
        """Check the status of a power command.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FanPowerCommand(self, request, context):
        """Separate RPC for toggling fan power due to need for time/percent power parameters
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FanPowerCommandFeedback(self, request, context):
        """Check the status of a fan power command.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetSafetyStop(self, request, context):
        """Reset the safety stop bit on SRSF-configured robots.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PowerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PowerCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.PowerCommand,
                    request_deserializer=bosdyn_dot_api_dot_power__pb2.PowerCommandRequest.FromString,
                    response_serializer=bosdyn_dot_api_dot_power__pb2.PowerCommandResponse.SerializeToString,
            ),
            'PowerCommandFeedback': grpc.unary_unary_rpc_method_handler(
                    servicer.PowerCommandFeedback,
                    request_deserializer=bosdyn_dot_api_dot_power__pb2.PowerCommandFeedbackRequest.FromString,
                    response_serializer=bosdyn_dot_api_dot_power__pb2.PowerCommandFeedbackResponse.SerializeToString,
            ),
            'FanPowerCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.FanPowerCommand,
                    request_deserializer=bosdyn_dot_api_dot_power__pb2.FanPowerCommandRequest.FromString,
                    response_serializer=bosdyn_dot_api_dot_power__pb2.FanPowerCommandResponse.SerializeToString,
            ),
            'FanPowerCommandFeedback': grpc.unary_unary_rpc_method_handler(
                    servicer.FanPowerCommandFeedback,
                    request_deserializer=bosdyn_dot_api_dot_power__pb2.FanPowerCommandFeedbackRequest.FromString,
                    response_serializer=bosdyn_dot_api_dot_power__pb2.FanPowerCommandFeedbackResponse.SerializeToString,
            ),
            'ResetSafetyStop': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetSafetyStop,
                    request_deserializer=bosdyn_dot_api_dot_power__pb2.ResetSafetyStopRequest.FromString,
                    response_serializer=bosdyn_dot_api_dot_power__pb2.ResetSafetyStopResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bosdyn.api.PowerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PowerService(object):
    """The power service for the robot that can power on/off the robot's motors.
    """

    @staticmethod
    def PowerCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bosdyn.api.PowerService/PowerCommand',
            bosdyn_dot_api_dot_power__pb2.PowerCommandRequest.SerializeToString,
            bosdyn_dot_api_dot_power__pb2.PowerCommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PowerCommandFeedback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bosdyn.api.PowerService/PowerCommandFeedback',
            bosdyn_dot_api_dot_power__pb2.PowerCommandFeedbackRequest.SerializeToString,
            bosdyn_dot_api_dot_power__pb2.PowerCommandFeedbackResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FanPowerCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bosdyn.api.PowerService/FanPowerCommand',
            bosdyn_dot_api_dot_power__pb2.FanPowerCommandRequest.SerializeToString,
            bosdyn_dot_api_dot_power__pb2.FanPowerCommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FanPowerCommandFeedback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bosdyn.api.PowerService/FanPowerCommandFeedback',
            bosdyn_dot_api_dot_power__pb2.FanPowerCommandFeedbackRequest.SerializeToString,
            bosdyn_dot_api_dot_power__pb2.FanPowerCommandFeedbackResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetSafetyStop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bosdyn.api.PowerService/ResetSafetyStop',
            bosdyn_dot_api_dot_power__pb2.ResetSafetyStopRequest.SerializeToString,
            bosdyn_dot_api_dot_power__pb2.ResetSafetyStopResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
