# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from bosdyn.api import directory_pb2 as bosdyn_dot_api_dot_directory__pb2


class DirectoryServiceStub(object):
    """DirectoryService lets clients discover which API services are available on a robot.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetServiceEntry = channel.unary_unary(
                '/bosdyn.api.DirectoryService/GetServiceEntry',
                request_serializer=bosdyn_dot_api_dot_directory__pb2.GetServiceEntryRequest.SerializeToString,
                response_deserializer=bosdyn_dot_api_dot_directory__pb2.GetServiceEntryResponse.FromString,
                )
        self.ListServiceEntries = channel.unary_unary(
                '/bosdyn.api.DirectoryService/ListServiceEntries',
                request_serializer=bosdyn_dot_api_dot_directory__pb2.ListServiceEntriesRequest.SerializeToString,
                response_deserializer=bosdyn_dot_api_dot_directory__pb2.ListServiceEntriesResponse.FromString,
                )


class DirectoryServiceServicer(object):
    """DirectoryService lets clients discover which API services are available on a robot.
    """

    def GetServiceEntry(self, request, context):
        """Get information about a specific service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListServiceEntries(self, request, context):
        """List all known services at time of call.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DirectoryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetServiceEntry': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServiceEntry,
                    request_deserializer=bosdyn_dot_api_dot_directory__pb2.GetServiceEntryRequest.FromString,
                    response_serializer=bosdyn_dot_api_dot_directory__pb2.GetServiceEntryResponse.SerializeToString,
            ),
            'ListServiceEntries': grpc.unary_unary_rpc_method_handler(
                    servicer.ListServiceEntries,
                    request_deserializer=bosdyn_dot_api_dot_directory__pb2.ListServiceEntriesRequest.FromString,
                    response_serializer=bosdyn_dot_api_dot_directory__pb2.ListServiceEntriesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bosdyn.api.DirectoryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DirectoryService(object):
    """DirectoryService lets clients discover which API services are available on a robot.
    """

    @staticmethod
    def GetServiceEntry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bosdyn.api.DirectoryService/GetServiceEntry',
            bosdyn_dot_api_dot_directory__pb2.GetServiceEntryRequest.SerializeToString,
            bosdyn_dot_api_dot_directory__pb2.GetServiceEntryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListServiceEntries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bosdyn.api.DirectoryService/ListServiceEntries',
            bosdyn_dot_api_dot_directory__pb2.ListServiceEntriesRequest.SerializeToString,
            bosdyn_dot_api_dot_directory__pb2.ListServiceEntriesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
